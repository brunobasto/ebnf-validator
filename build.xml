<?xml version="1.0"?>

<project name="compilers" xmlns:antelope="antlib:ise.antelope.tasks"  xmlns:ivy="antlib:org.apache.ivy.ant">
	<property name="project.dir" value="." />
	<property environment="env" />

	<!-- configuration file -->

	<property file="${project.dir}/build.properties" />

	<path id="application.classpath">
		<fileset dir="${project.dir}/lib/application" includes="*.jar" />
		<pathelement path="${project.dir}/classes" />
	</path>
	<path id="development.classpath">
		<fileset dir="${project.dir}/lib/development" includes="*.jar" />
	</path>

	<path id="server.classpath">
		<fileset dir="${project.dir}/lib/server" includes="*.jar" />
	</path>

	<path id="test.classpath">
		<fileset dir="${project.dir}/lib/test" includes="*.jar" />
		<pathelement path="${project.dir}/test-classes" />
	</path>

	<path id="project.classpath">
		<fileset dir="${project.dir}/lib/application" includes="*.jar" />
		<fileset dir="${project.dir}/lib/server" includes="*.jar" />
		<pathelement path="${project.dir}/classes" />
	</path>

	<taskdef classpathref="development.classpath" resource="net/sf/antcontrib/antlib.xml" />
	<taskdef classpathref="development.classpath" resource="org/apache/ivy/ant/antlib.xml" uri="antlib:org.apache.ivy.ant" />

	<target name="clean">
		<delete dir="${project.dir}/classes" />
		<delete dir="${project.dir}/lib/application" />
		<delete dir="${project.dir}/lib/server" />
		<delete dir="${project.dir}/lib/test" />
		<delete dir="${project.dir}/test-classes" />
	</target>

	<target name="install">
		<mkdir dir="${project.dir}/classes" />
		<mkdir dir="${project.dir}/lib/application" />
		<mkdir dir="${project.dir}/lib/server" />
		<mkdir dir="${project.dir}/lib/test" />
		<mkdir dir="${project.dir}/test" />
		<mkdir dir="${project.dir}/test-classes" />

		<ivy:resolve />
		<ivy:retrieve pattern="lib/[conf]/[artifact]-[revision].[ext]" conf="application, server, test" />
	</target>

	<target name="compile" depends="install, compile-application, compile-test" />

	<target name="compile-application">
		<mkdir dir="${project.dir}/classes" />

		<javac
			classpathref="project.classpath"
			compiler="${javac.compiler}"
			debug="${javac.debug}"
			deprecation="${javac.deprecation}"
			destdir="${project.dir}/classes"
			includeAntRuntime="false"
			nowarn="${javac.nowarn}"
			srcdir="${project.dir}/src"
		/>
	</target>

	<target name="compile-test" depends="compile-application">
		<mkdir dir="${project.dir}/test-classes" />

		<javac
			classpathref="test.classpath"
			compiler="${javac.compiler}"
			debug="${javac.debug}"
			deprecation="${javac.deprecation}"
			destdir="${project.dir}/test-classes"
			includeAntRuntime="false"
			nowarn="${javac.nowarn}"
			srcdir="${project.dir}/test"
		/>
	</target>

	<target name="run" depends="compile">
		<java
			classpathref="project.classpath"
			failonerror="true"
			fork="true"
			classname="com.brunobasto.ebnf.server.Launcher"
			maxmemory="256m"
			newenvironment="true"
		>
			<arg value="-o" />
			<arg value="${project.dir}/_antlr" />
			<arg value="${project.dir}/${grammar.file}" />
		</java>
	</target>

	<target name="test" depends="compile-test">
		<junit fork="true" printsummary="yes" haltonfailure="yes">
			<classpath>
				<path refid="test.classpath" />
				<pathelement location="${project.dir}/test-classes" />
			</classpath>

			<batchtest>
				<formatter type="plain" usefile="false" />

				<fileset dir="${project.dir}/test-classes">
					<include name="**/*Test.class" />
				</fileset>
			</batchtest>
		</junit>
	</target>
</project>